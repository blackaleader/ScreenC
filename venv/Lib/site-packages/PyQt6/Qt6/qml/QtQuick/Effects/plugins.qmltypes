import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "private/qquickmultieffect_p.h"
        name: "QQuickMultiEffect"
        accessSemantics: "reference"
        defaultProperty: "data"
        parentProperty: "parent"
        prototype: "QQuickItem"
        exports: ["QtQuick.Effects/MultiEffect 6.5"]
        exportMetaObjectRevisions: [1541]
        Property {
            name: "source"
            type: "QQuickItem"
            isPointer: true
            read: "source"
            write: "setSource"
            notify: "sourceChanged"
            index: 0
            isFinal: true
        }
        Property {
            name: "autoPaddingEnabled"
            type: "bool"
            read: "autoPaddingEnabled"
            write: "setAutoPaddingEnabled"
            notify: "autoPaddingEnabledChanged"
            index: 1
            isFinal: true
        }
        Property {
            name: "paddingRect"
            type: "QRectF"
            read: "paddingRect"
            write: "setPaddingRect"
            notify: "paddingRectChanged"
            index: 2
            isFinal: true
        }
        Property {
            name: "brightness"
            type: "double"
            read: "brightness"
            write: "setBrightness"
            notify: "brightnessChanged"
            index: 3
            isFinal: true
        }
        Property {
            name: "contrast"
            type: "double"
            read: "contrast"
            write: "setContrast"
            notify: "contrastChanged"
            index: 4
            isFinal: true
        }
        Property {
            name: "saturation"
            type: "double"
            read: "saturation"
            write: "setSaturation"
            notify: "saturationChanged"
            index: 5
            isFinal: true
        }
        Property {
            name: "colorization"
            type: "double"
            read: "colorization"
            write: "setColorization"
            notify: "colorizationChanged"
            index: 6
            isFinal: true
        }
        Property {
            name: "colorizationColor"
            type: "QColor"
            read: "colorizationColor"
            write: "setColorizationColor"
            notify: "colorizationColorChanged"
            index: 7
            isFinal: true
        }
        Property {
            name: "blurEnabled"
            type: "bool"
            read: "blurEnabled"
            write: "setBlurEnabled"
            notify: "blurEnabledChanged"
            index: 8
            isFinal: true
        }
        Property {
            name: "blur"
            type: "double"
            read: "blur"
            write: "setBlur"
            notify: "blurChanged"
            index: 9
            isFinal: true
        }
        Property {
            name: "blurMax"
            type: "int"
            read: "blurMax"
            write: "setBlurMax"
            notify: "blurMaxChanged"
            index: 10
            isFinal: true
        }
        Property {
            name: "blurMultiplier"
            type: "double"
            read: "blurMultiplier"
            write: "setBlurMultiplier"
            notify: "blurMultiplierChanged"
            index: 11
            isFinal: true
        }
        Property {
            name: "shadowEnabled"
            type: "bool"
            read: "shadowEnabled"
            write: "setShadowEnabled"
            notify: "shadowEnabledChanged"
            index: 12
            isFinal: true
        }
        Property {
            name: "shadowOpacity"
            type: "double"
            read: "shadowOpacity"
            write: "setShadowOpacity"
            notify: "shadowOpacityChanged"
            index: 13
            isFinal: true
        }
        Property {
            name: "shadowBlur"
            type: "double"
            read: "shadowBlur"
            write: "setShadowBlur"
            notify: "shadowBlurChanged"
            index: 14
            isFinal: true
        }
        Property {
            name: "shadowHorizontalOffset"
            type: "double"
            read: "shadowHorizontalOffset"
            write: "setShadowHorizontalOffset"
            notify: "shadowHorizontalOffsetChanged"
            index: 15
            isFinal: true
        }
        Property {
            name: "shadowVerticalOffset"
            type: "double"
            read: "shadowVerticalOffset"
            write: "setShadowVerticalOffset"
            notify: "shadowVerticalOffsetChanged"
            index: 16
            isFinal: true
        }
        Property {
            name: "shadowColor"
            type: "QColor"
            read: "shadowColor"
            write: "setShadowColor"
            notify: "shadowColorChanged"
            index: 17
            isFinal: true
        }
        Property {
            name: "shadowScale"
            type: "double"
            read: "shadowScale"
            write: "setShadowScale"
            notify: "shadowScaleChanged"
            index: 18
            isFinal: true
        }
        Property {
            name: "maskEnabled"
            type: "bool"
            read: "maskEnabled"
            write: "setMaskEnabled"
            notify: "maskEnabledChanged"
            index: 19
            isFinal: true
        }
        Property {
            name: "maskSource"
            type: "QQuickItem"
            isPointer: true
            read: "maskSource"
            write: "setMaskSource"
            notify: "maskSourceChanged"
            index: 20
            isFinal: true
        }
        Property {
            name: "maskThresholdMin"
            type: "double"
            read: "maskThresholdMin"
            write: "setMaskThresholdMin"
            notify: "maskThresholdMinChanged"
            index: 21
            isFinal: true
        }
        Property {
            name: "maskSpreadAtMin"
            type: "double"
            read: "maskSpreadAtMin"
            write: "setMaskSpreadAtMin"
            notify: "maskSpreadAtMinChanged"
            index: 22
            isFinal: true
        }
        Property {
            name: "maskThresholdMax"
            type: "double"
            read: "maskThresholdMax"
            write: "setMaskThresholdMax"
            notify: "maskThresholdMaxChanged"
            index: 23
            isFinal: true
        }
        Property {
            name: "maskSpreadAtMax"
            type: "double"
            read: "maskSpreadAtMax"
            write: "setMaskSpreadAtMax"
            notify: "maskSpreadAtMaxChanged"
            index: 24
            isFinal: true
        }
        Property {
            name: "maskInverted"
            type: "bool"
            read: "maskInverted"
            write: "setMaskInverted"
            notify: "maskInvertedChanged"
            index: 25
            isFinal: true
        }
        Property {
            name: "itemRect"
            type: "QRectF"
            read: "itemRect"
            notify: "itemRectChanged"
            index: 26
            isReadonly: true
            isFinal: true
        }
        Property {
            name: "fragmentShader"
            type: "QString"
            read: "fragmentShader"
            notify: "fragmentShaderChanged"
            index: 27
            isReadonly: true
            isFinal: true
        }
        Property {
            name: "vertexShader"
            type: "QString"
            read: "vertexShader"
            notify: "vertexShaderChanged"
            index: 28
            isReadonly: true
            isFinal: true
        }
        Property {
            name: "hasProxySource"
            type: "bool"
            read: "hasProxySource"
            notify: "hasProxySourceChanged"
            index: 29
            isReadonly: true
            isFinal: true
        }
        Signal { name: "shaderChanged" }
        Signal { name: "itemSizeChanged" }
        Signal { name: "sourceChanged" }
        Signal { name: "autoPaddingEnabledChanged" }
        Signal { name: "paddingRectChanged" }
        Signal { name: "brightnessChanged" }
        Signal { name: "contrastChanged" }
        Signal { name: "saturationChanged" }
        Signal { name: "colorizationChanged" }
        Signal { name: "colorizationColorChanged" }
        Signal { name: "blurEnabledChanged" }
        Signal { name: "blurChanged" }
        Signal { name: "blurMaxChanged" }
        Signal { name: "blurMultiplierChanged" }
        Signal { name: "shadowEnabledChanged" }
        Signal { name: "shadowOpacityChanged" }
        Signal { name: "shadowBlurChanged" }
        Signal { name: "shadowHorizontalOffsetChanged" }
        Signal { name: "shadowVerticalOffsetChanged" }
        Signal { name: "shadowColorChanged" }
        Signal { name: "shadowScaleChanged" }
        Signal { name: "maskEnabledChanged" }
        Signal { name: "maskSourceChanged" }
        Signal { name: "maskThresholdMinChanged" }
        Signal { name: "maskSpreadAtMinChanged" }
        Signal { name: "maskThresholdMaxChanged" }
        Signal { name: "maskSpreadAtMaxChanged" }
        Signal { name: "maskInvertedChanged" }
        Signal { name: "itemRectChanged" }
        Signal { name: "fragmentShaderChanged" }
        Signal { name: "vertexShaderChanged" }
        Signal { name: "hasProxySourceChanged" }
    }
}
